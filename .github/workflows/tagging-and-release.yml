name: Tagging And Release
on:
  push:
    branches:
      - trunk
jobs:
  tagging-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # This makes action fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
      - name: Set git user
        run: |
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"

      - name: Use Node.js 14.x
        if: steps.should-create-tag.outputs.TAG_EXISTS == 'false'
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Generate packages tags
        run: |
          npm i -g pnpm@latest
          pnpm install -r --ignore-scripts
          pnpm changeset tag

      - name: Get tag version
        id: get-tag-version
        run: |
          VERSION=$(cat ./apps/reaction/package.json | grep -m 1 version | sed 's/[^0-9.]//g')
          NEW_TAG=v$VERSION
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo '::set-output name=newTag::'$NEW_TAG
          echo "New tag is $NEW_TAG"

      - name: Check should create release tag
        id: should-create-tag
        run: |
          if [ $(git tag -l "$NEW_TAG") ]; then
            echo '::set-output name=TAG_EXISTS::true'
          else
            echo '::set-output name=TAG_EXISTS::false'
          fi

      - name: Create release tag
        if: steps.should-create-tag.outputs.TAG_EXISTS == 'false'
        run: |
          git tag -a $NEW_TAG -m "chore(release): $NEW_TAG [skip ci]"
          git push origin $NEW_TAG
          echo "Create release tag success: $NEW_TAG"

      - name: Push tags
        run: git push origin --tags

      - name: Extract release notes
        if: steps.should-create-tag.outputs.TAG_EXISTS == 'false'
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          changelog_file: apps/reaction/CHANGELOG.md

      - name: Create Release
        id: create_release
        if: steps.should-create-tag.outputs.TAG_EXISTS == 'false'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.get-tag-version.outputs.newTag }}
          release_name: ${{ steps.get-tag-version.outputs.newTag }}
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
          draft: false
          prerelease: false
