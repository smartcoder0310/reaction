name: Tagging And Release
on:
  pull_request:
    types:
      - closed

permissions: {}

jobs:
  tagging-and-release:
    if: github.event.pull_request.merged == true && github.base_ref == 'trunk' && github.head_ref == 'changeset-release/trunk'
    permissions:
      contents: write # to create release (changesets/action)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # This makes action fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
      - name: Set git user
        run: |
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: |
          npm i -g pnpm@latest
          pnpm install -r --ignore-scripts

      - name: Release apps and packages
        uses: changesets/action@v1
        with:
          publish: pnpm changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get tag version
        id: get-tag-version
        run: |
          VERSION=$(cat ./apps/reaction/package.json | grep -m 1 version | sed 's/[^0-9.]//g')
          REACTION_APP_NEW_TAG=v$VERSION
          echo "REACTION_APP_NEW_TAG=$REACTION_APP_NEW_TAG" >> $GITHUB_ENV
          echo '::set-output name=newTag::'$REACTION_APP_NEW_TAG
          echo "New release tag is $REACTION_APP_NEW_TAG"

      - name: Check should create release tag
        id: should-create-tag
        run: |
          if [ $(git tag -l "$REACTION_APP_NEW_TAG") ]; then
            echo '::set-output name=REACTION_APP_TAG_EXISTS::true'
          else
            echo '::set-output name=REACTION_APP_TAG_EXISTS::false'
          fi

      - name: Create release tag
        if: steps.should-create-tag.outputs.REACTION_APP_TAG_EXISTS == 'false'
        run: |
          git tag -a $REACTION_APP_NEW_TAG -m "chore(release): $REACTION_APP_NEW_TAG [skip ci]"
          git push origin $REACTION_APP_NEW_TAG
          echo "Create release tag success: $REACTION_APP_NEW_TAG"

      - name: Push release tag
        run: git push origin $REACTION_APP_NEW_TAG

      - name: Extract release notes
        if: steps.should-create-tag.outputs.REACTION_APP_TAG_EXISTS == 'false'
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          changelog_file: apps/reaction/CHANGELOG.md

      - name: Create Release
        id: create_release
        if: steps.should-create-tag.outputs.REACTION_APP_TAG_EXISTS == 'false'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.get-tag-version.outputs.newTag }}
          release_name: ${{ steps.get-tag-version.outputs.newTag }}
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
          draft: false
          prerelease: false
